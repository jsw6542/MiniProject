<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="r">
	
	<!-- 리뷰전체조회 -->

	<select id = "review_list" resultType = "review" parameterType = "String">
		select * from user_review  where game_name = #{game_name} order by REVIEW_IDX DESC
	</select>
	
	<select id="review_one" resultType = "review" parameterType = "int">
		select * from user_review where review_idx = #{review_idx}
	</select>
	
	<insert id = "review_insert" parameterType = "review">
		insert into USER_REVIEW values(
		seq_review_idx.nextVal,
		#{game_idx},
		#{user_review},
		#{user_nickname},
		sysdate,
		#{review_title},
		#{user_score},
		#{game_name}
		)			
	</insert>
	
	<select id = "review_AL" resultType = "review" parameterType="java.util.HashMap">
		select * from ( select rank() over( order by REVIEW_IDX DESC, user_score Asc )no, b.* from USER_REVIEW b ) where no between #{start} and #{end}
	</select>
	
	<delete id="deleteReviewAD" parameterType="int">
		delete USER_REVIEW where review_idx = #{idx}
	</delete>
	
	<select id = "review_countAL" resultType = "int">
		select count(*) from USER_REVIEW
	</select>
	
	<select id = "review_count" resultType = "int" parameterType="String">
		select count(*) from USER_REVIEW <where>game_name = #{value}</where>
	</select>
	
	<update id="scoreAVG_update" parameterType="String">
		 <![CDATA[
    update GAME_INFO set game_user_score = ( select Round(AVG(user_score), 1) from USER_REVIEW where game_name = #{value}) where game_name = #{value}
  		]]>
	</update>
		
	
</mapper>












